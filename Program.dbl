
;;; <summary>
;;; The main entry point for the application.
;;; </summary>
main Orders

	.include "WND:windows.def"
	.include "INC:header.def"
	.include "INC:detail.def"
	

	 

	record
		;detail			,strDetail 
		system_date		,a14		;System Date (yyyymmddhhmmss)
		overlay_date		,d8@system_date	;yyyymmdd
		windowId		,d4
		menuItem		,a1
		windowOrderId		,d4
		windowDetail		,d4

		;File channel numbers
		chn_header		,d4
		chn_detail		,d4
		
	record
		mh			,D_HANDLE
		ms			,d4
		mc			,d4

proc
	call startup
	call process
	call shutdown
	stop

startup,	;internal subroutine
	
	system_date = %datetime
	;Open terminal channel
	open(1,o,"tt:")

	;Configure the environment
	xcall flags(1001010,1)
	
	;Initialize the window environment
	xcall w_init(1,1,5)

	;Clear screen
	display(1,$scr_clr(screen))

	;Display title
	xcall w_caption(WC_SET,"My First Synergy Application")

	;Open the order header file
	repeat
	begin
		open(chn_header=0,U:I,"DAT:header.ism") [$ERR_FNF=hnf]
		exitloop
	hnf,
		;Order header file is missing, create a new one
		xcall isamc("DAT:header.ism",^size(header),1,"start=1,length=6,nodups,nomodify")
		
	end
	


	
	repeat
	begin
		open(chn_detail=0,U:I,"DAT:detail.ism") [$ERR_FNF=dnf]
		exitloop
	dnf,
		;Order header file is missing, create a new one
		xcall isamc("DAT:detail.ism",^size(strDetail),1,"start=7:1,length=6:4,nodups,nomodify")
		
	end
	





	;Open the order detail file
	return
process,	;internal subroutine

;	;Display message
;	display(1,$scr_pos(1,1),"Welcome")
;	display(1,$scr_pos(2,1),"The date : ",^a(overlay_date))
;	display(1,$scr_pos(3,1),"Press a key :")
;	accept(1,(keyPressed))

	;Call of the external subroutine
;	xcall display_message("Hello there")

	;Show message in window
	
	xcall create_window(windowId,"MENU",9,40,5,20,"Order Processing Menu")

	xcall display_text(windowId,2,2,"[A] Add an order")
	xcall display_text(windowId,4,2,"[V] View an order")
	xcall display_text(windowId,6,2,"[E] Add an order")
	xcall display_text(windowId,8,2,"Select an option :")
	repeat
	begin
		xcall wait_key(windowId,8,20,menuItem)

		using menuItem select
		("A","a"),
			call order_header
		("E","e"),
			exitloop
		("V","v"),
			call view_header
		(),
			xcall display_message("Invalid option")
		endusing
	end
	xcall delete_window(windowId)
	return
shutdown,	;internal subroutine

	close chn_header,chn_detail

	;Clear screen
	display(1,$scr_clr(screen))
	
	;Close window
	xcall w_exit

	;Close terminal
	close 1
	return

order_header,
	xcall create_window(windowOrderId,"ORDER",12,60,7,10,"Order Processing Menu")

	xcall display_text(windowOrderId,2,2,"Order number          :")
	xcall display_text(windowOrderId,4,2,"Customer account code :")
	xcall display_text(windowOrderId,5,2,"Order date            :")
	xcall display_text(windowOrderId,6,2,"Order placed by       :")
	xcall display_text(windowOrderId,7,2,"Sales rep code        :")

	repeat
	begin
		xcall input(windowOrderId,2,25,header.oh_number)

		;checking entre order number
		if(!header.oh_number)
			exitloop

		;Verify that the order does not exist
		if(%file_access(FileOp.Find,chn_header,,header.oh_number)==FileResult.OK)
		begin
			xcall display_message("Order already exists!")
			nextloop
		end


		xcall input(windowOrderId,4,25,header.oh_customer,true)
		xcall input(windowOrderId,5,25,header.oh_date,,,true)
		xcall input(windowOrderId,6,25,header.oh_contact,true)
		xcall input(windowOrderId,7,25,header.oh_salesrep,true)

		;Allocate Dynamic Memory
		mh = %mem_proc(DM_ALLOC,^size(strDetail)*(ms=3))
		set ms,mc=0

		call order_detail
		
		;Save the order
		if(mc)
		begin
			;First save the order header recod
			if(%File_access(FileOp.Create,chn_header,header)!=FileResult.OK) then
			begin
				xcall display_message("Failed to save order header record!")
			end
			else
			begin
				data ix	,d4
				for ix from 1 thru mc
				begin
					if(%File_access(FileOp.Create,chn_detail,^m(strDetail[ix],mh))!=FileResult.OK) 
					begin
						xcall display_message("Failed to save an order detail record!")
						exitloop
					end
					
				end
			end
		end

		;Deallocate dynamic memory
		mh = %mem_proc(DM_FREE,mh)

		xcall clear_box(windowOrderId,2,21,7,60)
	end
	xcall delete_window(windowOrderId)
	return
	 
order_detail,

	

	xcall create_window(windowDetail,"ORDER",12,60,7,10,"Add Items to Order")

	xcall display_text(windowDetail,2,2,"Order number :" + %string(header.oh_number,"XXXXXX"))
	xcall display_text(windowDetail,3,2,"Item number  :")
	xcall display_text(windowDetail,5,2,"Part number  :")
	xcall display_text(windowDetail,6,2,"Quantity     :")
	xcall display_text(windowDetail,7,2,"Unit price   :")

	repeat
	begin
		if((mc+=1)>ms)
		begin
			mh = %mem_proc(DM_RESIZ,^size(strDetail)*(ms+=3),mh)
		end
		^m(strDetail[mc].od_number,mh) = header.oh_number
		^m(strDetail[mc].od_item,mh) = mc
		xcall display_text(windowDetail,3,17,%string(mc)+" of " + %string(ms))

		xcall input(windowDetail,5,16,^m(strDetail[mc].od_part,mh))

		;checking entre order number
		if(!^m(strDetail[mc].od_part,mh))
			exitloop
		begin
			mc-=1
			exitloop
		end
		xcall input(windowDetail,6,17,^m(strDetail[mc].od_qty,mh),true)
		xcall input(windowDetail,7,17,^m(strDetail[mc].od_unit_price,mh),true)
		

		xcall clear_box(windowDetail,5,17,7,60)
	end
	xcall delete_window(windowDetail)
	return



view_header,
	xcall create_window(windowOrderId,"ORDER",12,60,7,10,"View an order")

	xcall display_text(windowOrderId,2,2,"Order number          :")
	xcall display_text(windowOrderId,4,2,"Customer account code :")
	xcall display_text(windowOrderId,5,2,"Order date            :")
	xcall display_text(windowOrderId,6,2,"Order placed by       :")
	xcall display_text(windowOrderId,7,2,"Sales rep code        :")
	xcall display_text(windowOrderId,8,2,"Press a key           :")
	repeat
	begin
		xcall input(windowOrderId,2,25,header.oh_number)

		;checking entre order number
		if(!header.oh_number)
			exitloop

		;Verify that the order does not exist
		if(%file_access(FileOp.Read,chn_header,header,header.oh_number)!=FileResult.OK)
		begin
			xcall display_message("Order does not exists!")
			nextloop
		end


		xcall display_text(windowOrderId,4,25,header.oh_customer)
		xcall display_text(windowOrderId,5,25,%string(header.oh_date,"XXXX/XX/XX"))
		xcall display_text(windowOrderId,6,25,header.oh_contact)
		xcall display_text(windowOrderId,7,25,%string(header.oh_salesrep))

		begin
			data keyPressed ,a1
			xcall wait_key(windowOrderId,8,25,keyPressed)
		end
		;Allocate Dynamic Memory
		mh = %mem_proc(DM_ALLOC,^size(strDetail)*(ms=1))
		set ms,mc=0

		call view_detail
		
		
		;Deallocate dynamic memory
		mh = %mem_proc(DM_FREE,mh)

		xcall clear_box(windowOrderId,2,21,7,60)
	end
	xcall delete_window(windowOrderId)
	return
	 
view_detail,

	

	xcall create_window(windowDetail,"ORDER",12,60,7,10,"View Order Items")

	xcall display_text(windowDetail,2,2,"Order number :" + %string(header.oh_number,"XXXXXX"))
	xcall display_text(windowDetail,3,2,"Item number  :")
	xcall display_text(windowDetail,5,2,"Part number  :")
	xcall display_text(windowDetail,6,2,"Quantity     :")
	xcall display_text(windowDetail,7,2,"Unit price   :")
	xcall display_text(windowDetail,8,2,"Press a key  :")

	;;Position to the first item for the order
	if(%file_access(FileOp.Find,chn_detail,,header.oh_number)!=FileResult.OK)
	begin
		nop
	end


	repeat
	begin
		
		if((%file_access(FileOp.ReadNext,chn_detail,^m(strDetail[1],mh))!=FileResult.OK)
			&	||(^m(strDetail[1].od_number,mh) != header.oh_number))
		begin
			exitloop
		end

		
		
		xcall display_text(windowDetail,3,17,%string(mc+=1))

		xcall display_text(windowDetail,5,16,^m(strDetail[1].od_part,mh))

		xcall display_text(windowDetail,6,17,%string(^m(strDetail[1].od_qty,mh)))
		xcall display_text(windowDetail,7,17,%string(^m(strDetail[1].od_unit_price,mh),"$$$$,$$X.XX"))
		begin
			data keyPressed ,a1
		xcall wait_key(windowDetail,8,17,keyPressed)
		end

		xcall clear_box(windowDetail,5,17,7,60)
	end
	xcall delete_window(windowDetail)
	return


endmain